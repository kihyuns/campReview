안드로이드 어플리케이션과 os/cpu의 관계





어플리케이션 빌드와 실행

               (컴파일러)                                                
명령문     --javac.exe--      가상기계어 > Bytecode Interpreter  > windows > inter cpu
.java           *번역                .class        (해당프로그램에 맞는)    (OS)

진짜 기계어가 아니라 가상 기계어기 때문에 os에 바로 실행할 수없다
그래서 JVM 을 통해서 OS에 실행한다



명령문에서 가상기계까지가 개발자의 역할이다
* cpu와os에 상관없이 프로그래밍 및 컴파일 가능


인터프리터 방식비교 >컴파일 할 때 문법 검사 완료
                             어느정도 기계어에 가깝게 변경
                             인터프리터방식보다 실행수도 빠르다




*가상 기계어 = (Bytecode = p-code = IR-code) 중간코드

-----------------------------------------
컴파일 방식 비교 : os/cpu에 상관없이 배포가능
