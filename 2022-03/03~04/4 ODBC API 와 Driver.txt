*ODBC API와 Driver                     Driver - ODBC 규격에 맞춰 작성한   구현체
(C / C++ )					          (클래스 및 메서드)
*JAVA에서 쓸 수가 없다


DBMS 마다 API가 달라서 프로그래밍의 일관성이 없는 문제를 해결하기 위해서
API의   규격  을 통일한다
   (메서드 사용법) > 메서드명,파라미터,리턴값 

그래서 등장한 것이 ODBC API 이다

ODBC API 규격에 맞춰 메서드를 구현하는데 


DBMS 제조사는 ODBC API 규격에 맞춰 클래스와 메서드를 제작하는데 
ODBC API를 사용하게 되면  개발자 입장에서는 APP의 API가 같기 때문에 DBMS 마다 따로 프로그래밍 할 필요가 없다
					 (메서드 사용법)


ODBC Driver는 (1) vendor api 호출하는 방식이 있다 - 프로그래밍의 일관성을 위해 껍데기로서 역할을 한다
	
	      (2) 직접 DBMS와 통신하는 방식이 있다

어떤 방식으로 동작하는 ODBC Driver를 만들지는 제조사 마음이다


ODBC API의 장점은 프로그램을 한번만 짜면 된다

Native API를 직접 호출하는 것 보다 ODBC API를 쓰는게 낫다

ODBC API의 단점은 한번 더 경유해서 호출하기 때문에 실행 속도가 느리다   
(다이렉트로 DBMS에 접속하는 상황이라면 예외이다)


