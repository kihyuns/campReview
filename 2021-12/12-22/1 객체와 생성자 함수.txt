*객체와 생성자 함수

ex04 exam10-1~11-2


exam10-1 변수를 각각의 레퍼런스에 저장

10-2 레퍼런스 배열을 사용 - 장점: 반복문을 이용해서 다룰 수 있기 때문에 코드가 간결해짐
		            단점: 객체를 쓰기 위해 값을 세팅하는 것이 불편함

10-3 - 함수를 사용 - 내부적으로 객체를 만들어서 값을 집어넣고 필요하면 계산된 값도 리턴해줌
*객체 주소를 담을 땐 레퍼런스 주소를 사용
			단점: 값이 달라지면 합계평균을 구할 때 번거로움

10-4 - 객체의 합계 평균울 메소드로 계산하도록 함수를 추가 (sum,aver)
			단점: 함수를 매번 호출해야함

10-5 - { } 사용으로 객체를 깔끔하게 사용
 		

10-6 - 바깥에서 new 다음 바로 함수를 호출하여 this에 객체 주소를 넣어서 바로 객체 초기화


10-7 - 생성자로서 사용하는 함수는 대문자로 시작해서 객체의 용도를 표현하는 명사 형태로 짓는다


10-8 - 프로토타입이라는 바구니에 객체들이 공통으로 쓸 값을 저장해두어서 매번 객체를 호출하는 번거로움을 없앰


11-1 - new 명령 다음에 함수를 호출하면 생성자 함수, new 명령없이 호출하면 일반 함수



11-2 - new 명령으로 함수를 호출하면 생성자 내부에 this라는 변수가 활성화 된다 (기본객체 주소를 담음)
         new 명령이 없으면 this에 객체주소가 없어서 값이 undefined가 된다








