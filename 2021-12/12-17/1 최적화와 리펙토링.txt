*최적화       vs            리팩토링


*최적화

목표 - (실행 과정을단축, 메모리 사용 최소) > 실행 속도 향상

단점 - 코드를 읽기 어렵다 > 기능 추가/변경/삭제가 어렵다 > 유지보수에 시간이 많이 든다

비용 - 더 적은 자원(CPU, 메모리)을 사용


*리팩토링

목표 - 코드를 유지보수 하기 쉽게 더 잘게 분리 > 코드의 가독성, 재사용성 향상

단점 - 실행 단계가 더 많아진다 > 실행속도가 느려진다   => (블레이드 시스템 ) 환경에서 메인보드 추가하면
						 ( 그리드 컴퓨팅  )  쉽게 해결
비용 - 유지보수에 시간이 더 적게 소요된다